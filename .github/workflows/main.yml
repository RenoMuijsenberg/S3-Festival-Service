name: Continuous integration

on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code 
        uses: actions/checkout@v3
        
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: dotnet restore ./FestivalService/FestivalService.csproj
        
      - name: Build app
        run: dotnet build -c Release --no-restore ./FestivalService/FestivalService.csproj

      - name: Run automated tests
        run: dotnet test -c Release --no-build ./FestivalService/FestivalService.csproj
        
  quality-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install SonarCloud scanners
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"RenoMuijsenberg_S3-Festival-Planner-Festival-Serivce" /o:"renomuijsenberg" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
  build-docker-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./FestivalService
          file: ./FestivalService/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/festival-service:latest
